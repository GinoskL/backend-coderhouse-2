<div class="container">
  <h1>Carrito de Compras</h1>
  
  {{#if cart.products.length}}
    <div class="cart-summary">
      <h2>Resumen del Carrito</h2>
      <p>ID del Carrito: <span class="cart-id">{{cart._id}}</span></p>
      <p>Total de Productos: <span class="cart-total-items">{{cart.products.length}}</span></p>
    </div>
    
    <div class="cart-items">
      {{#each cart.products}}
        <div class="cart-item">
          <div class="item-image">
            {{#if this.product.thumbnails.length}}
              <img src="{{this.product.thumbnails.[0]}}" alt="{{this.product.title}}">
            {{else}}
              <div class="no-image">Sin imagen</div>
            {{/if}}
          </div>
          
          <div class="item-details">
            <h3>{{this.product.title}}</h3>
            <p class="item-description">{{this.product.description}}</p>
            <p class="item-price">Precio: ${{this.product.price}}</p>
            <p class="item-category">Categoría: {{this.product.category}}</p>
            
            <div class="item-quantity">
              <label for="quantity-{{this.product._id}}">Cantidad:</label>
              <div class="quantity-controls">
                <button class="quantity-btn" onclick="updateQuantity('{{../cart._id}}', '{{this.product._id}}', {{subtract this.quantity 1}})">-</button>
                <span class="quantity-value">{{this.quantity}}</span>
                <button class="quantity-btn" onclick="updateQuantity('{{../cart._id}}', '{{this.product._id}}', {{add this.quantity 1}})">+</button>
              </div>
            </div>
            
            <div class="item-subtotal">
              <p>Subtotal: ${{multiply this.product.price this.quantity}}</p>
            </div>
            
            <button class="remove-btn" onclick="removeFromCart('{{../cart._id}}', '{{this.product._id}}')">
              Eliminar
            </button>
          </div>
        </div>
      {{/each}}
    </div>
    
    <div class="cart-actions">
      <button class="clear-cart-btn" onclick="clearCart('{{cart._id}}')">Vaciar Carrito</button>
      <button class="checkout-btn">Proceder al Pago</button>
    </div>
  {{else}}
    <div class="empty-cart">
      <p>Tu carrito está vacío</p>
      <a href="/products" class="continue-shopping">Continuar Comprando</a>
    </div>
  {{/if}}
</div>

<!-- Toast notification container -->
<div id="toast-container" class="toast-container"></div>

<script>
  function updateQuantity(cartId, productId, newQuantity) {
    if (newQuantity < 1) {
      showToast('❌ La cantidad no puede ser menor a 1', 'error');
      return;
    }
    
    fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: newQuantity })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Error al actualizar cantidad');
      }
      return response.json();
    })
    .then(data => {
      console.log("✅ Cantidad actualizada:", data);
      showToast('✅ Cantidad actualizada correctamente', 'success');
      // Reload the page to reflect changes
      setTimeout(() => {
        window.location.reload();
      }, 1000);
    })
    .catch(error => {
      console.error("❌ Error:", error);
      showToast('❌ Error al actualizar la cantidad', 'error');
    });
  }
  
  function removeFromCart(cartId, productId) {
    // Show confirmation dialog
    showConfirmDialog(
      '¿Estás seguro de que deseas eliminar este producto del carrito?',
      () => {
        fetch(`/api/carts/${cartId}/products/${productId}`, {
          method: 'DELETE'
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Error al eliminar producto');
          }
          return response.json();
        })
        .then(data => {
          console.log("✅ Producto eliminado del carrito:", data);
          showToast('✅ Producto eliminado del carrito correctamente', 'success');
          // Reload the page to reflect changes
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        })
        .catch(error => {
          console.error("❌ Error:", error);
          showToast('❌ Error al eliminar el producto del carrito', 'error');
        });
      }
    );
  }
  
  function clearCart(cartId) {
    // Show confirmation dialog
    showConfirmDialog(
      '¿Estás seguro de que deseas vaciar todo el carrito?',
      () => {
        fetch(`/api/carts/${cartId}`, {
          method: 'DELETE'
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Error al vaciar carrito');
          }
          return response.json();
        })
        .then(data => {
          console.log("✅ Carrito vaciado:", data);
          showToast('✅ Carrito vaciado correctamente', 'success');
          // Reload the page to reflect changes
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        })
        .catch(error => {
          console.error("❌ Error:", error);
          showToast('❌ Error al vaciar el carrito', 'error');
        });
      }
    );
  }
  
  // Function to show toast notification
  function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `toast toast-${type}`;
    
    // Create toast content with icon
    let icon = '';
    if (type === 'success') icon = '✅';
    else if (type === 'error') icon = '❌';
    else if (type === 'info') icon = 'ℹ️';
    else if (type === 'warning') icon = '⚠️';
    
    toast.innerHTML = `
        <div class="toast-icon">${icon}</div>
        <div class="toast-message">${message}</div>
        <button class="toast-close" onclick="this.parentElement.remove()">×</button>
    `;
    
    const container = document.getElementById('toast-container');
    container.appendChild(toast);
    
    // Trigger animation
    setTimeout(() => {
        toast.classList.add('show');
    }, 10);
    
    // Remove toast after 3 seconds
    setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => {
            if (toast.parentElement) {
                container.removeChild(toast);
            }
        }, 300);
    }, 3000);
  }
  
  // Function to show custom confirmation dialog
  function showConfirmDialog(message, onConfirm) {
    // Create dialog elements
    const overlay = document.createElement('div');
    overlay.className = 'dialog-overlay';
    
    const dialog = document.createElement('div');
    dialog.className = 'confirm-dialog';
    
    dialog.innerHTML = `
        <div class="dialog-content">
            <div class="dialog-message">${message}</div>
            <div class="dialog-buttons">
                <button class="dialog-btn dialog-cancel">Cancelar</button>
                <button class="dialog-btn dialog-confirm">Confirmar</button>
            </div>
        </div>
    `;
    
    // Add to DOM
    document.body.appendChild(overlay);
    document.body.appendChild(dialog);
    
    // Add event listeners
    const cancelBtn = dialog.querySelector('.dialog-cancel');
    const confirmBtn = dialog.querySelector('.dialog-confirm');
    
    cancelBtn.addEventListener('click', () => {
        document.body.removeChild(overlay);
        document.body.removeChild(dialog);
    });
    
    confirmBtn.addEventListener('click', () => {
        onConfirm();
        document.body.removeChild(overlay);
        document.body.removeChild(dialog);
    });
  }
</script>

<style>
  .container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
  }
  
  h1 {
    text-align: center;
    margin-bottom: 30px;
  }
  
  .cart-summary {
    background-color: #f5f5f5;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .cart-summary h2 {
    margin-top: 0;
    margin-bottom: 10px;
    color: #333;
  }
  
  .cart-id, .cart-total-items {
    font-weight: bold;
    color: #4CAF50;
  }
  
  .cart-items {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-bottom: 30px;
  }
  
  .cart-item {
    display: flex;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 0.3s;
  }
  
  .cart-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .item-image {
    width: 150px;
    height: 150px;
    overflow: hidden;
  }
  
  .item-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s;
  }
  
  .cart-item:hover .item-image img {
    transform: scale(1.05);
  }
  
  .no-image {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    color: #999;
  }
  
  .item-details {
    flex: 1;
    padding: 15px;
    position: relative;
  }
  
  .item-details h3 {
    margin-top: 0;
    margin-bottom: 10px;
    color: #333;
  }
  
  .item-description {
    color: #666;
    margin: 5px 0;
    font-size: 0.9em;
  }
  
  .item-price, .item-category {
    font-size: 0.9em;
    margin: 5px 0;
    color: #555;
  }
  
  .item-quantity {
    display: flex;
    align-items: center;
    gap: 10px;
    margin: 15px 0;
  }
  
  .quantity-controls {
    display: flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 4px;
    overflow: hidden;
  }
  
  .quantity-btn {
    width: 30px;
    height: 30px;
    background-color: #f5f5f5;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 16px;
    transition: background-color 0.3s;
  }
  
  .quantity-btn:hover {
    background-color: #e0e0e0;
  }
  
  .quantity-value {
    padding: 0 15px;
    font-weight: bold;
    min-width: 30px;
    text-align: center;
  }
  
  .item-subtotal {
    font-weight: bold;
    margin: 10px 0;
    color: #4CAF50;
  }
  
  .remove-btn {
    background-color: #f44336;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    position: absolute;
    bottom: 15px;
    right: 15px;
    transition: background-color 0.3s;
  }
  
  .remove-btn:hover {
    background-color: #d32f2f;
  }
  
  .cart-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 30px;
  }
  
  .clear-cart-btn {
    background-color: #f44336;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .clear-cart-btn:hover {
    background-color: #d32f2f;
  }
  
  .checkout-btn {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .checkout-btn:hover {
    background-color: #45a049;
  }
  
  .empty-cart {
    text-align: center;
    padding: 50px;
    background-color: #f5f5f5;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .continue-shopping {
    display: inline-block;
    margin-top: 20px;
    background-color: #4CAF50;
    color: white;
    text-decoration: none;
    padding: 10px 20px;
    border-radius: 4px;
    transition: background-color 0.3s;
  }
  
  .continue-shopping:hover {
    background-color: #45a049;
  }
  
  /* Toast Notifications */
  .toast-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
  }
  
  .toast {
    display: flex;
    align-items: center;
    min-width: 300px;
    margin-bottom: 10px;
    padding: 15px;
    border-radius: 8px;
    color: white;
    font-weight: 500;
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.3s ease-in-out;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  }
  
  .toast.show {
    opacity: 1;
    transform: translateX(0);
  }
  
  .toast-icon {
    margin-right: 10px;
    font-size: 20px;
  }
  
  .toast-message {
    flex: 1;
  }
  
  .toast-close {
    background: none;
    border: none;
    color: white;
    font-size: 20px;
    cursor: pointer;
    opacity: 0.7;
  }
  
  .toast-close:hover {
    opacity: 1;
  }
  
  .toast-success {
    background-color: #4CAF50;
    border-left: 5px solid #2E7D32;
  }
  
  .toast-error {
    background-color: #f44336;
    border-left: 5px solid #B71C1C;
  }
  
  .toast-info {
    background-color: #2196F3;
    border-left: 5px solid #0D47A1;
  }
  
  .toast-warning {
    background-color: #FF9800;
    border-left: 5px solid #E65100;
  }
  
  /* Confirmation Dialog */
  .dialog-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    z-index: 1001;
  }
  
  .confirm-dialog {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    z-index: 1002;
    width: 90%;
    max-width: 400px;
    animation: dialogFadeIn 0.3s;
  }
  
  @keyframes dialogFadeIn {
    from {opacity: 0; transform: translate(-50%, -60%);}
    to {opacity: 1; transform: translate(-50%, -50%);}
  }
  
  .dialog-message {
    margin-bottom: 20px;
    font-size: 16px;
    text-align: center;
  }
  
  .dialog-buttons {
    display: flex;
    justify-content: space-between;
  }
  
  .dialog-btn {
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s;
  }
  
  .dialog-cancel {
    background-color: #f5f5f5;
    color: #333;
  }
  
  .dialog-confirm {
    background-color: #f44336;
    color: white;
  }
  
  .dialog-cancel:hover {
    background-color: #e0e0e0;
  }
  
  .dialog-confirm:hover {
    background-color: #d32f2f;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .cart-item {
      flex-direction: column;
    }
    
    .item-image {
      width: 100%;
      height: 200px;
    }
    
    .remove-btn {
      position: static;
      margin-top: 15px;
      width: 100%;
    }
    
    .cart-actions {
      flex-direction: column;
      gap: 10px;
    }
    
    .clear-cart-btn, .checkout-btn {
      width: 100%;
    }
  }
</style>

