<h1>{{title}}</h1>

<table border="1">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Descripci√≥n</th>
            <th>C√≥digo</th>
            <th>Precio</th>
            <th>Stock</th>
            <th>Categor√≠a</th>
            <th>Estado</th>
            <th>Im√°genes</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="product-list">
        {{#each products}}
        <tr>
            <td>{{this._id}}</td>
            <td>{{this.title}}</td>
            <td>{{this.description}}</td>
            <td>{{this.code}}</td>
            <td>${{this.price}}</td>
            <td>{{this.stock}}</td>
            <td>{{this.category}}</td>
            <td>{{#if this.status}}‚úîÔ∏è{{else}}‚ùå{{/if}}</td>
            <td>
                {{#each this.thumbnails}}
                    <img src="{{this}}" alt="Imagen" width="50">
                {{/each}}
            </td>
            <td>
                <button onclick="deleteProduct('{{../cartId}}', '{{this._id}}')">üóë Eliminar</button>
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>

<!-- Formulario para agregar productos -->
<form id="product-form">
    <input type="text" id="title" placeholder="Nombre del producto" required />
    <input type="text" id="description" placeholder="Descripci√≥n" required />
    <input type="text" id="code" placeholder="C√≥digo del producto" required />
    <input type="number" id="price" placeholder="Precio" required />
    <input type="number" id="stock" placeholder="Stock disponible" required />
    <input type="text" id="category" placeholder="Categor√≠a" required />
    <input type="text" id="thumbnails" placeholder="URLs de im√°genes separadas por coma" />

    <button type="submit">Agregar Producto</button>
</form>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    // ‚úÖ Escuchar actualizaci√≥n de productos desde WebSockets
    socket.on('updateProducts', (products) => {
        console.log("üì• Productos recibidos desde WebSocket:", products);
        renderProducts(products);
    });

    function renderProducts(products) {
        const tableBody = document.getElementById('product-list');
        tableBody.innerHTML = '';

        if (!products || products.length === 0) {
            tableBody.innerHTML = '<tr><td colspan="10">‚ùå No hay productos disponibles</td></tr>';
            return;
        }

        products.forEach(product => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${product._id}</td>
                <td>${product.title}</td>
                <td>${product.description}</td>
                <td>${product.code}</td>
                <td>$${product.price}</td>
                <td>${product.stock}</td>
                <td>${product.category}</td>
                <td>${product.status ? '‚úîÔ∏è' : '‚ùå'}</td>
                <td>
                    ${product.thumbnails.map(img => `<img src="${img}" alt="Imagen" width="50">`).join('')}
                </td>
                <td>
                    <button onclick="deleteProduct('${cartId}', '${product._id}')">üóë Eliminar</button>
                </td>
            `;
            tableBody.appendChild(row);
        });
    }

    // ‚úÖ Enviar nuevo producto por WebSockets
    document.getElementById('product-form').addEventListener('submit', (event) => {
        event.preventDefault();

        const title = document.getElementById('title').value;
        const description = document.getElementById('description').value;
        const code = document.getElementById('code').value;
        const price = document.getElementById('price').value;
        const stock = document.getElementById('stock').value;
        const category = document.getElementById('category').value;
        const thumbnails = document.getElementById('thumbnails').value.split(',').map(url => url.trim());

        const newProduct = { title, description, code, price: Number(price), stock: Number(stock), category, thumbnails };

        console.log("üì§ Enviando producto:", newProduct);

        socket.emit('newProduct', newProduct);

        document.getElementById('product-form').reset();
    });

    // ‚úÖ Eliminar producto
    function deleteProduct(cartId, productId) {
        if (!cartId || !productId) {
            console.error("‚ùå Error: Faltan cartId o productId.");
            return;
        }
        console.log(`üóë Eliminando producto ${productId} del carrito ${cartId}`);
        socket.emit('deleteProduct', { cartId, productId });
    }
</script>



