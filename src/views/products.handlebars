<div class="container">
  <h1>Cat√°logo de Productos</h1>
  
  <div class="filters">
    <form id="filter-form">
      <div class="filter-group">
        <label for="category">Categor√≠a:</label>
        <select id="category" name="category">
          <option value="">Todas las categor√≠as</option>
          {{#each categories}}
            <option value="{{this}}" {{#if (eq ../selectedCategory this)}}selected{{/if}}>{{this}}</option>
          {{/each}}
        </select>
      </div>
      
      <div class="filter-group">
        <label for="sort">Ordenar por:</label>
        <select id="sort" name="sort">
          <option value="">Sin ordenar</option>
          <option value="asc" {{#if (eq sort "asc")}}selected{{/if}}>Precio: menor a mayor</option>
          <option value="desc" {{#if (eq sort "desc")}}selected{{/if}}>Precio: mayor a menor</option>
        </select>
      </div>
      
      <button type="submit" class="filter-button">Aplicar filtros</button>
    </form>
  </div>

  <div class="products-grid">
    {{#if products.length}}
      {{#each products}}
        <div class="product-card">
          <div class="product-image">
            {{#if this.thumbnails.length}}
              <img src="{{this.thumbnails.[0]}}" alt="{{this.title}}">
            {{else}}
              <div class="no-image">Sin imagen</div>
            {{/if}}
          </div>
          <div class="product-info">
            <h3>{{this.title}}</h3>
            <p class="product-description">{{this.description}}</p>
            <p class="product-price">${{this.price}}</p>
            <p class="product-stock">Stock: {{this.stock}}</p>
            <p class="product-category">Categor√≠a: {{this.category}}</p>
            <button class="add-to-cart-btn" onclick="addToCart('{{../cartId}}', '{{this._id}}')">
              Agregar al carrito
            </button>
          </div>
        </div>
      {{/each}}
    {{else}}
      <div class="no-products">No hay productos disponibles</div>
    {{/if}}
  </div>

  <div class="pagination">
    {{#if hasPrevPage}}
      <a href="/products?page={{prevPage}}{{#if limit}}&limit={{limit}}{{/if}}{{#if sort}}&sort={{sort}}{{/if}}{{#if category}}&category={{category}}{{/if}}" class="page-link">Anterior</a>
    {{else}}
      <span class="page-link disabled">Anterior</span>
    {{/if}}
    
    <span class="page-info">P√°gina {{page}} de {{totalPages}}</span>
    
    {{#if hasNextPage}}
      <a href="/products?page={{nextPage}}{{#if limit}}&limit={{limit}}{{/if}}{{#if sort}}&sort={{sort}}{{/if}}{{#if category}}&category={{category}}{{/if}}" class="page-link">Siguiente</a>
    {{else}}
      <span class="page-link disabled">Siguiente</span>
    {{/if}}
  </div>
</div>

<!-- Toast notification container -->
<div id="toast-container" class="toast-container"></div>

<script>
  function addToCart(cartId, productId) {
    if (!cartId || !productId) {
      console.error("‚ùå Error: Faltan cartId o productId.");
      return;
    }
    
    console.log(`üõí Agregando producto ${productId} al carrito ${cartId}`);
    
    // Use fetch to call the API endpoint
    fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: 1 })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Error al agregar al carrito');
      }
      return response.json();
    })
    .then(data => {
      console.log("‚úÖ Producto agregado al carrito:", data);
      // Show toast notification instead of alert
      showToast('‚úÖ Producto agregado al carrito correctamente', 'success');
    })
    .catch(error => {
      console.error("‚ùå Error:", error);
      showToast('‚ùå Error al agregar el producto al carrito', 'error');
    });
  }
  
  // Function to show toast notification
  function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `toast toast-${type}`;
    toast.innerHTML = message;
    
    const container = document.getElementById('toast-container');
    container.appendChild(toast);
    
    // Trigger animation
    setTimeout(() => {
      toast.classList.add('show');
    }, 10);
    
    // Remove toast after 3 seconds
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => {
        container.removeChild(toast);
      }, 300);
    }, 3000);
  }
</script>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  
  h1 {
    text-align: center;
    margin-bottom: 30px;
  }
  
  .filters {
    background-color: #f5f5f5;
    padding: 15px;
    border-radius: 5px;
    margin-bottom: 20px;
  }
  
  #filter-form {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    align-items: center;
  }
  
  .filter-group {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  select {
    padding: 8px;
    border-radius: 4px;
    border: 1px solid #ddd;
  }
  
  .filter-button {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
  }
  
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
  }
  
  .product-card {
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
    transition: transform 0.3s;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .product-image {
    height: 200px;
    overflow: hidden;
  }
  
  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .no-image {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    color: #999;
  }
  
  .product-info {
    padding: 15px;
  }
  
  .product-description {
    color: #666;
    margin: 5px 0;
    font-size: 0.9em;
  }
  
  .product-price {
    font-weight: bold;
    font-size: 1.2em;
    margin: 10px 0;
  }
  
  .product-stock, .product-category {
    font-size: 0.9em;
    color: #666;
    margin: 5px 0;
  }
  
  .add-to-cart-btn {
    width: 100%;
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 8px 0;
    border-radius: 4px;
    cursor: pointer;
    margin-top: 10px;
  }
  
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    margin-top: 30px;
  }
  
  .page-link {
    padding: 8px 15px;
    background-color: #4CAF50;
    color: white;
    text-decoration: none;
    border-radius: 4px;
  }
  
  .page-link.disabled {
    background-color: #ddd;
    color: #999;
    cursor: not-allowed;
  }
  
  .page-info {
    font-size: 0.9em;
  }
  
  .no-products {
    grid-column: 1 / -1;
    text-align: center;
    padding: 50px;
    background-color: #f5f5f5;
    border-radius: 5px;
  }
  
  /* Toast Notifications */
  .toast-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
  }
  
  .toast {
    min-width: 250px;
    margin-bottom: 10px;
    padding: 15px 20px;
    border-radius: 4px;
    color: white;
    font-weight: 500;
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.3s ease-in-out;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  
  .toast.show {
    opacity: 1;
    transform: translateX(0);
  }
  
  .toast-success {
    background-color: #4CAF50;
  }
  
  .toast-error {
    background-color: #f44336;
  }
  
  .toast-info {
    background-color: #2196F3;
  }
</style>

